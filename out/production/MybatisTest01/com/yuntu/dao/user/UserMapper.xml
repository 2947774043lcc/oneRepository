<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuntu.dao.user.UserMapper">
    <!--当数据库中的字段信息与对象实体类中的属性不一致时,需要使用resiltMap进行映射-->
    <resultMap id="userList" type="User">
        <result property="id" column="id"/>
        <result property="userCode" column="userCode"/>
        <result property="userNAme" column="userName"/>
        <result property="userPassword" column="userPassword"/>
        <result property="gender" column="gender"/>
    </resultMap>
<!--根据roleId获取用户列表(用户表和角色表是一对一的关系)-->
    <resultMap id="userRoleList" type="User">
        <id property="id" column="id"/>
        <result property="userCode" column="userCode"/>
        <result property="userName" column="userName"/>
        <result property="userRole" column="userRole"/>
        <!--association property="role" javaType="Role">
            <id property="id" column="r_id"/>
            <result property="roleCode" column="roleCode"/>
            <result property="roleName" column="roleName"/>
        </association>-->
        <result property="role.id" column="r_id"/>
        <result property="role.roleCode" column="roleCode"/>
        <result property="role.roleName" column="roleName"/>
    </resultMap>

    <select id="getUserListByRoleId" parameterType="Integer" resultMap="userRoleList">
        select u.*,r.id AS r_id,r.roleCode,r.roleName
        from smbms_user u,smbms_role r
        where u.userRole = r.id
          and u.userRole=#{userRole}
    </select>
<!--查询用户记录表-->
    <select id="count" resultType="int">
        select count(1) as count from  smbms_user;
    </select>
<!--    查询用户列表-->
    <select id="getUserList" resultType="com.yuntu.pojo.User">
        select *  from  smbms_user;
    </select>
    <select id="getUserByNameAndPas" resultType="com.yuntu.pojo.User" parameterType="com.yuntu.pojo.User">
        select *  from  smbms_user where userName='${userName}' and userPassword = '${userPassword}'
    </select>
    <!--<select id="getUserByLike" resultType="com.yuntu.pojo.User" parameterType="String">
        select * from smbms_user where userName like CONCAT('%',#{userName},'%');
    </select>-->
    <select id="getUserByLikeTwo" resultType="User" parameterType="String">
        select  * from smbms_user where userName like CONCAT('%',#{userName},'%')
        and userPassword = #{userPassword}
    </select>
    <select id="getUserByLikeThree" resultType="com.yuntu.pojo.User" parameterType="String">
        select  * from smbms_user where userName like CONCAT('%',#{userName},'%')
                                    and userPassword = #{userPassword}
    </select>
    <insert id="addUser" parameterType="User">
        insert into smbms_user(userCode,userName,userPassword,gender,birthday,phone,
                               address,userRole,createdBy,creationDate) values (#{userCode},#{userName},#{userPassword},#{gender},
                                                                                #{birthday},#{phone},#{address},#{userRole},
                                                                                #{createdBy},#{creationDate})
    </insert>
    <update id="updateUser" parameterType="User">
        update smbms_user set userCode=#{userCode},userName=#{userName},userPassword=#{userPassword},gender=#{gender},
                              birthday=#{birthday},phone=#{phone},address=#{address},userRole=#{userRole},
                              createdBy=#{createdBy},creationDate=#{creationDate} where id=#{id}
    </update>
    <delete id="deleteUser" parameterType="int">
        delete from smbms_user where id=#{id}
    </delete>
    <!--获取用户的地址列表(user表和address表 是 1对多的关系)-->
    <resultMap id="userAddressResult" type="User">
        <id property="id" column="id"/>
        <result property="userCode" column="userCode"/>
        <result property="userName" column="userName"/>
        <collection property="addressList" ofType="Address">
            <id property="id" column="a_id"/>
            <result property="postCode" column="postCode"/>
            <result property="tel" column="tel"/>
            <result property="contact" column="contact"/>
            <result property="addressDesc" column="addressDesc"/>
        </collection>
    </resultMap>
    <select id="getAddressListByUserId" resultMap="userAddressResult">
        select u.*,a.id as a_id,a.contact,a.addressDesc,a.postCode,a.tel
        from smbms_user u,smbms_address a where u.id = a.userId and u.id=#{userId}
    </select>

    <insert id="batchInsertUser" parameterType="list">
        insert into smbms_user(userCode,userName,userPassword,gender,birthday,phone,address,userRole,createdBy,creationDate)
        values
        <foreach collection="list" item="u" separator=",">
            (#{userCode}#{userName}#{userPassword}#{gender}#{birthday}#{phone}#{address}#{userRole}#{createdBy}#{creationDate})
        </foreach>
    </insert>
</mapper>